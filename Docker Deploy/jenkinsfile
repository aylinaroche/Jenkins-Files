pipeline {
    agent any
    environment {
        PATH = "$PATH:/usr/local/bin/"
    }
    stages {
        stage('CloneGit') {
            steps {
                sh "git --version"
                sh "mkdir -p Docker"
                dir('/var/lib/jenkins/workspace/Pipeline-Docker/Docker'){
                    git credentialsId: 'oli', url: 'git@github.com:aylinaroche/Docker-Files.git'
                }
                sh "mkdir -p Jenkins"
                dir('/var/lib/jenkins/workspace/Pipeline-Docker/Jenkins'){
                    git credentialsId: 'oli', url: 'git@github.com:aylinaroche/Jenkins-Files.git'
                }
                echo 'SUCCESSFUL CLONE GIT..'
            }
        }
        stage('Build') {
            steps {
                dir('/var/lib/jenkins/workspace/Pipeline-Docker/Docker/flask'){
                    sh """
                        ls
                        docker build -t 'repository-aylin' .
                        docker images
                    """
                }
                echo 'SUCCESSFUL BUILD..'
            }
        }
        stage('Upload') {
            steps {
                withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', accessKeyVariable: 'AWS_ACCESS_KEY_ID', credentialsId: 'AWSCredentials', secretKeyVariable: 'AWS_SECRET_ACCESS_KEY']]) {

                    sh """
                        export AWS_ACCESS_KEY_ID="YOUR_AWS_ACCESS_KEY_ID"
                        export AWS_SECRET_ACCESS_KEY="YOUR_AWS_SECRET_ACCESS_KEY"
                        export AWS_SESSION_TOKEN="AWS_AWS_SESSION_TOKEN"
                        export AWS_DEFAULT_REGION=us-west-2
                        \$(aws ecr get-login --no-include-email --region us-west-2)
                        docker tag repository-aylin:latest 492266378106.dkr.ecr.us-west-2.amazonaws.com/repository-aylin:latest
                        docker push 492266378106.dkr.ecr.us-west-2.amazonaws.com/repository-aylin:latest
                    """
                    echo 'SUCCESSFUL UPLOAD..'
                }
            }
        }
        stage('Cluster') {
            steps {
                withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', accessKeyVariable: 'AWS_ACCESS_KEY_ID', credentialsId: 'AWSCredentials', secretKeyVariable: 'AWS_SECRET_ACCESS_KEY']]) {
                    dir('/var/lib/jenkins/workspace/Pipeline-Docker/Jenkins'){
                        sh """
                        export AWS_ACCESS_KEY_ID="YOUR_AWS_ACCESS_KEY_ID"
                        export AWS_SECRET_ACCESS_KEY="YOUR_AWS_SECRET_ACCESS_KEY"
                        export AWS_SESSION_TOKEN="AWS_AWS_SESSION_TOKEN"
                        export AWS_DEFAULT_REGION=us-west-2    
                            aws ecs list-clusters
                            aws ecs register-task-definition --cli-input-json file://ClusterECS.json                    
                            aws ecs update-service \
                                --cluster myCluster-Aylin \
                                --service MyServiceAylin \
                                --task-definition Task-Docker-Aylin \
                                --desired-count 1 
                        """
                    }
                    echo 'SUCCESSFUL UPLOAD..'
                }
            }
        }


    }

}
